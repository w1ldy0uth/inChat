version: "3.9"

services:
  mongo:
    image: mongo:7.0.12
    restart: always
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 10s
      retries: 5
      start_period: 40s
      timeout: 10s
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: main
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    networks:
      backend_net:
      infrastructure_net:

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - 8081:8081
    networks:
      infrastructure_net:

  minio:
    image: minio/minio:RELEASE.2024-07-31T05-46-26Z
    restart: always
    command: server --console-address ":9001" /data
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      retries: 1
      start_period: 5s
      timeout: 5s
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      backend_net:
      infrastructure_net:

  redis:
    image: redis:7.4.0-alpine
    restart: always
    command: redis-server --requirepass $${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 3s
      retries: 5
      start_period: 3s
      timeout: 3s
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    networks:
      backend_net:
      infrastructure_net:

volumes:
  mongo-data:
  minio-data:
  redis-data:

networks:
  backend_net:
    external: true
  infrastructure_net:
    external: true
